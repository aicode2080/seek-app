#!/usr/bin/env node
"use strict";const e=require("commander"),{exec:o}=require("child_process"),t=require("inquirer"),s=require("chalk"),a=require("path"),n=require("fs"),c=["一键提交","init","pull","add","commit","push","q","amend","清空ignore缓存"];async function r(){const e=a.join(__dirname,"..",".git","index.lock");n.existsSync(e)&&(await n.unlinkSync(e),await n.accessSync(e)),console.log("Removed existing index.lock file.")}function i(e){return new Promise(((t,s)=>{o(`git ${e}`,((o,a,n)=>{if(o)return console.error(`执行命令 "${e}" 时出错: ${o.message}`),n&&console.error(`stderr: ${n}`),void s(o);n&&console.error(`stderr: ${n}`),console.log(`stdout: ${a}`),t()}))}))}async function l(e){r();const s=await t.prompt([{type:"input",name:"text",message:"请输入要添加的文件名或路径"}]);console.log("正在执行添加操作",s.text);try{const e=s.text?`git add ${s.text}`:"git add .";o(e,((e,o,t)=>{e?console.error(`添加文件时出错: ${e.message}`):t?console.error(`stderr: ${t}`):console.log(`已经添加到暂存区: ${o}`)}))}catch(e){console.log(e.message)}}async function g(e){const s=await t.prompt([{type:"input",name:"text",message:"请输入提交信息",default:"修改"}]);console.log("正在执行添加操作",s.text),o(`git commit -m "${s.text}"`,((e,o,t)=>{e?console.error(`提交更改时出错: ${e.message}`):t?console.error(`stderr: ${t}`):console.log(`stdout: ${o}`)}))}function u(e){i("push")}console.log(s.green("=======欢迎使用 Git 自动化工具=======")),async function(){try{const e=await async function(){try{const{chooseIndex:e}=await t.prompt([{type:"list",name:"chooseIndex",message:"请选择要执行的命令",default:"pull",choices:c.map(((e,o)=>({name:e,value:o+1})))}]);return console.log(e),c[e-1]}catch(e){console.log(e.message)}}();if("q"===e)return void console.log("退出 Git 自动化工具。");switch(console.log(`您输入了${e}正在为您执行操作...`),e){case"init":i("init");break;case"pull":console.log("现在为您拉取最新代码..."),i("pull");break;case"add":l();break;case"log":i("log");break;case"status":i("status");break;case"commit":g();break;case"push":u();break;case"一键提交":await l(),await g(),u();break;case"amend":await l(),await async function(){await r(),await i("commit --amend")}(),u();break;case"清空ignore缓存":await async function(){console.log(s.yellow("正在清空 Git 缓存..."));try{await i("rm -rf .git/index"),await i("git add ."),console.log(s.green("Git 缓存已清空并重新添加所有文件"))}catch(e){console.error(s.red(`清空缓存失败：${e.message}`))}}();break;default:console.log("您输入了错误的命令")}}catch(e){console.log(e.message)}}(),e.parse(process.argv);
//# sourceMappingURL=git-auto.js.map
