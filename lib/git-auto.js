import o from"commander";import{exec as e}from"child_process";import t from"inquirer";import s from"chalk";import a,{dirname as n}from"path";import r from"fs";import{fileURLToPath as c}from"url";const i=n(c(import.meta.url)),l=["一键提交","init","pull","add","commit","push","q","amend","清空ignore缓存"];async function m(){const o=a.join(i,"..",".git","index.lock");r.existsSync(o)&&(await r.unlinkSync(o),await r.accessSync(o)),console.log("Removed existing index.lock file.")}function g(o){return new Promise(((t,s)=>{e(`git ${o}`,((e,a,n)=>{if(e)return console.error(`执行命令 "${o}" 时出错: ${e.message}`),n&&console.error(`stderr: ${n}`),void s(e);n&&console.error(`stderr: ${n}`),console.log(`stdout: ${a}`),t()}))}))}async function u(o){m();const s=await t.prompt([{type:"input",name:"text",message:"请输入要添加的文件名或路径"}]);console.log("正在执行添加操作",s.text);try{const o=s.text?`git add ${s.text}`:"git add .";e(o,((o,e,t)=>{o?console.error(`添加文件时出错: ${o.message}`):t?console.error(`stderr: ${t}`):console.log(`已经添加到暂存区: ${e}`)}))}catch(o){console.log(o.message)}}async function d(o){const s=await t.prompt([{type:"input",name:"text",message:"请输入提交信息",default:"修改"}]);console.log("正在执行添加操作",s.text),e(`git commit -m "${s.text}"`,((o,e,t)=>{o?console.error(`提交更改时出错: ${o.message}`):t?console.error(`stderr: ${t}`):console.log(`stdout: ${e}`)}))}function p(o){g("push")}console.log(s.green("=======欢迎使用 Git 自动化工具=======")),async function(){try{const o=await async function(){try{const{chooseIndex:o}=await t.prompt([{type:"list",name:"chooseIndex",message:"请选择要执行的命令",default:"pull",choices:l.map(((o,e)=>({name:o,value:e+1})))}]);return console.log(o),l[o-1]}catch(o){console.log(o.message)}}();if("q"===o)return void console.log("退出 Git 自动化工具。");switch(console.log(`您输入了${o}正在为您执行操作...`),o){case"init":g("init");break;case"pull":console.log("现在为您拉取最新代码..."),g("pull");break;case"add":u();break;case"log":g("log");break;case"status":g("status");break;case"commit":d();break;case"push":p();break;case"一键提交":await u(),await d(),p();break;case"amend":await u(),await async function(){await m(),await g("commit --amend")}(),p();break;case"清空ignore缓存":await async function(){console.log(s.yellow("正在清空 Git 缓存..."));try{await g("rm -rf .git/index"),await g("git add ."),console.log(s.green("Git 缓存已清空并重新添加所有文件"))}catch(o){console.error(s.red(`清空缓存失败：${o.message}`))}}();break;default:console.log("您输入了错误的命令")}}catch(o){console.log(o.message)}}(),o.parse(process.argv);
