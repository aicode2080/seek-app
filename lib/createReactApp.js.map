{"version":3,"file":"createReactApp.js","sources":["../src/createReactApp.js"],"sourcesContent":["'use strict';\n\nconst https = require('https');\nconst chalk = require('chalk');\nconst commander = require('commander');\nconst dns = require('dns');\nconst envinfo = require('envinfo');\nconst execSync = require('child_process').execSync;\nconst fs = require('fs-extra');\nconst hyperquest = require('hyperquest');\nconst prompts = require('prompts');\nconst os = require('os');\nconst path = require('path');\nconst semver = require('semver');\nconst spawn = require('cross-spawn');\nconst tmp = require('tmp');\nconst unpack = require('tar-pack').unpack;\nconst url = require('url');\nconst validateProjectName = require('validate-npm-package-name');\n\nconst packageJson = require('./package.json');\n\nfunction isUsingYarn() {\n  return (process.env.npm_config_user_agent || '').indexOf('yarn') === 0;\n}\n\nfunction hasGivenWarning() {\n  const localWarningFilePath = path.join(\n    __dirname,\n    'given-deprecation-warning'\n  );\n  return fs.existsSync(localWarningFilePath);\n}\n\nfunction writeWarningFile() {\n  const localWarningFilePath = path.join(\n    __dirname,\n    'given-deprecation-warning'\n  );\n  fs.writeFileSync(localWarningFilePath, 'true');\n}\n\nlet projectName;\n\nfunction init() {\n  if (!hasGivenWarning()) {\n    console.log(chalk.yellow.bold('create-react-app is deprecated.'));\n    console.log('');\n    console.log(\n      'You can find a list of up-to-date React frameworks on react.dev'\n    );\n    console.log(\n      'For more info see:' + chalk.underline('https://react.dev/link/cra')\n    );\n    console.log('');\n    console.log(\n      chalk.grey('This error message will only be shown once per install.')\n    );\n    writeWarningFile();\n  }\n\n  const program = new commander.Command(packageJson.name)\n    .version(packageJson.version)\n    .arguments('<project-directory>')\n    .usage(`${chalk.green('<project-directory>')} [options]`)\n    .action(name => {\n      projectName = name;\n    })\n    .option('--verbose', 'print additional logs')\n    .option('--info', 'print environment debug info')\n    .option(\n      '--scripts-version <alternative-package>',\n      'use a non-standard version of react-scripts'\n    )\n    .option(\n      '--template <path-to-template>',\n      'specify a template for the created project'\n    )\n    .option('--use-pnp')\n    .allowUnknownOption()\n    .on('--help', () => {\n      console.log(\n        `    Only ${chalk.green('<project-directory>')} is required.`\n      );\n      console.log();\n      console.log(\n        `    A custom ${chalk.cyan('--scripts-version')} can be one of:`\n      );\n      console.log(`      - a specific npm version: ${chalk.green('0.8.2')}`);\n      console.log(`      - a specific npm tag: ${chalk.green('@next')}`);\n      console.log(\n        `      - a custom fork published on npm: ${chalk.green(\n          'my-react-scripts'\n        )}`\n      );\n      console.log(\n        `      - a local path relative to the current working directory: ${chalk.green(\n          'file:../my-react-scripts'\n        )}`\n      );\n      console.log(\n        `      - a .tgz archive: ${chalk.green(\n          'https://mysite.com/my-react-scripts-0.8.2.tgz'\n        )}`\n      );\n      console.log(\n        `      - a .tar.gz archive: ${chalk.green(\n          'https://mysite.com/my-react-scripts-0.8.2.tar.gz'\n        )}`\n      );\n      console.log(\n        `    It is not needed unless you specifically want to use a fork.`\n      );\n      console.log();\n      console.log(`    A custom ${chalk.cyan('--template')} can be one of:`);\n      console.log(\n        `      - a custom template published on npm: ${chalk.green(\n          'cra-template-typescript'\n        )}`\n      );\n      console.log(\n        `      - a local path relative to the current working directory: ${chalk.green(\n          'file:../my-custom-template'\n        )}`\n      );\n      console.log(\n        `      - a .tgz archive: ${chalk.green(\n          'https://mysite.com/my-custom-template-0.8.2.tgz'\n        )}`\n      );\n      console.log(\n        `      - a .tar.gz archive: ${chalk.green(\n          'https://mysite.com/my-custom-template-0.8.2.tar.gz'\n        )}`\n      );\n      console.log();\n      console.log(\n        `    If you have any problems, do not hesitate to file an issue:`\n      );\n      console.log(\n        `      ${chalk.cyan(\n          'https://github.com/facebook/create-react-app/issues/new'\n        )}`\n      );\n      console.log();\n    })\n    .parse(process.argv);\n\n  if (program.info) {\n    console.log(chalk.bold('\\nEnvironment Info:'));\n    console.log(\n      `\\n  current version of ${packageJson.name}: ${packageJson.version}`\n    );\n    console.log(`  running from ${__dirname}`);\n    return envinfo\n      .run(\n        {\n          System: ['OS', 'CPU'],\n          Binaries: ['Node', 'npm', 'Yarn'],\n          Browsers: [\n            'Chrome',\n            'Edge',\n            'Internet Explorer',\n            'Firefox',\n            'Safari',\n          ],\n          npmPackages: ['react', 'react-dom', 'react-scripts'],\n          npmGlobalPackages: ['create-react-app'],\n        },\n        {\n          duplicates: true,\n          showNotFound: true,\n        }\n      )\n      .then(console.log);\n  }\n\n  if (typeof projectName === 'undefined') {\n    console.error('Please specify the project directory:');\n    console.log(\n      `  ${chalk.cyan(program.name())} ${chalk.green('<project-directory>')}`\n    );\n    console.log();\n    console.log('For example:');\n    console.log(\n      `  ${chalk.cyan(program.name())} ${chalk.green('my-react-app')}`\n    );\n    console.log();\n    console.log(\n      `Run ${chalk.cyan(`${program.name()} --help`)} to see all options.`\n    );\n    process.exit(1);\n  }\n\n  // We first check the registry directly via the API, and if that fails, we try\n  // the slower `npm view [package] version` command.\n  //\n  // This is important for users in environments where direct access to npm is\n  // blocked by a firewall, and packages are provided exclusively via a private\n  // registry.\n  checkForLatestVersion()\n    .catch(() => {\n      try {\n        return execSync('npm view create-react-app version').toString().trim();\n      } catch (e) {\n        return null;\n      }\n    })\n    .then(latest => {\n      if (latest && semver.lt(packageJson.version, latest)) {\n        console.log();\n        console.error(\n          chalk.yellow(\n            `You are running \\`create-react-app\\` ${packageJson.version}, which is behind the latest release (${latest}).\\n\\n` +\n              'We recommend always using the latest version of create-react-app if possible.'\n          )\n        );\n        console.log();\n        console.log(\n          'The latest instructions for creating a new app can be found here:\\n' +\n            'https://create-react-app.dev/docs/getting-started/'\n        );\n        console.log();\n      } else {\n        const useYarn = isUsingYarn();\n        createApp(\n          projectName,\n          program.verbose,\n          program.scriptsVersion,\n          program.template,\n          useYarn,\n          program.usePnp\n        );\n      }\n    });\n}\n\nfunction createApp(name, verbose, version, template, useYarn, usePnp) {\n  const unsupportedNodeVersion = !semver.satisfies(\n    // Coerce strings with metadata (i.e. `15.0.0-nightly`).\n    semver.coerce(process.version),\n    '>=14'\n  );\n\n  if (unsupportedNodeVersion) {\n    console.log(\n      chalk.yellow(\n        `You are using Node ${process.version} so the project will be bootstrapped with an old unsupported version of tools.\\n\\n` +\n          `Please update to Node 14 or higher for a better, fully supported experience.\\n`\n      )\n    );\n    // Fall back to latest supported react-scripts on Node 4\n    version = 'react-scripts@0.9.x';\n  }\n\n  const root = path.resolve(name);\n  const appName = path.basename(root);\n\n  checkAppName(appName);\n  fs.ensureDirSync(name);\n  if (!isSafeToCreateProjectIn(root, name)) {\n    process.exit(1);\n  }\n  console.log();\n\n  console.log(`Creating a new React app in ${chalk.green(root)}.`);\n  console.log();\n\n  const packageJson = {\n    name: appName,\n    version: '0.1.0',\n    private: true,\n  };\n  fs.writeFileSync(\n    path.join(root, 'package.json'),\n    JSON.stringify(packageJson, null, 2) + os.EOL\n  );\n\n  const originalDirectory = process.cwd();\n  process.chdir(root);\n  if (!useYarn && !checkThatNpmCanReadCwd()) {\n    process.exit(1);\n  }\n\n  if (!useYarn) {\n    const npmInfo = checkNpmVersion();\n    if (!npmInfo.hasMinNpm) {\n      if (npmInfo.npmVersion) {\n        console.log(\n          chalk.yellow(\n            `You are using npm ${npmInfo.npmVersion} so the project will be bootstrapped with an old unsupported version of tools.\\n\\n` +\n              `Please update to npm 6 or higher for a better, fully supported experience.\\n`\n          )\n        );\n      }\n      // Fall back to latest supported react-scripts for npm 3\n      version = 'react-scripts@0.9.x';\n    }\n  } else if (usePnp) {\n    const yarnInfo = checkYarnVersion();\n    if (yarnInfo.yarnVersion) {\n      if (!yarnInfo.hasMinYarnPnp) {\n        console.log(\n          chalk.yellow(\n            `You are using Yarn ${yarnInfo.yarnVersion} together with the --use-pnp flag, but Plug'n'Play is only supported starting from the 1.12 release.\\n\\n` +\n              `Please update to Yarn 1.12 or higher for a better, fully supported experience.\\n`\n          )\n        );\n        // 1.11 had an issue with webpack-dev-middleware, so better not use PnP with it (never reached stable, but still)\n        usePnp = false;\n      }\n      if (!yarnInfo.hasMaxYarnPnp) {\n        console.log(\n          chalk.yellow(\n            'The --use-pnp flag is no longer necessary with yarn 2 and will be deprecated and removed in a future release.\\n'\n          )\n        );\n        // 2 supports PnP by default and breaks when trying to use the flag\n        usePnp = false;\n      }\n    }\n  }\n\n  run(\n    root,\n    appName,\n    version,\n    verbose,\n    originalDirectory,\n    template,\n    useYarn,\n    usePnp\n  );\n}\n\nfunction install(root, useYarn, usePnp, dependencies, verbose, isOnline) {\n  return new Promise((resolve, reject) => {\n    let command;\n    let args;\n    if (useYarn) {\n      command = 'yarnpkg';\n      args = ['add', '--exact'];\n      if (!isOnline) {\n        args.push('--offline');\n      }\n      if (usePnp) {\n        args.push('--enable-pnp');\n      }\n      [].push.apply(args, dependencies);\n\n      // Explicitly set cwd() to work around issues like\n      // https://github.com/facebook/create-react-app/issues/3326.\n      // Unfortunately we can only do this for Yarn because npm support for\n      // equivalent --prefix flag doesn't help with this issue.\n      // This is why for npm, we run checkThatNpmCanReadCwd() early instead.\n      args.push('--cwd');\n      args.push(root);\n\n      if (!isOnline) {\n        console.log(chalk.yellow('You appear to be offline.'));\n        console.log(chalk.yellow('Falling back to the local Yarn cache.'));\n        console.log();\n      }\n    } else {\n      command = 'npm';\n      args = [\n        'install',\n        '--no-audit', // https://github.com/facebook/create-react-app/issues/11174\n        '--save',\n        '--save-exact',\n        '--loglevel',\n        'error',\n      ].concat(dependencies);\n\n      if (usePnp) {\n        console.log(chalk.yellow(\"NPM doesn't support PnP.\"));\n        console.log(chalk.yellow('Falling back to the regular installs.'));\n        console.log();\n      }\n    }\n\n    if (verbose) {\n      args.push('--verbose');\n    }\n\n    const child = spawn(command, args, { stdio: 'inherit' });\n    child.on('close', code => {\n      if (code !== 0) {\n        reject({\n          command: `${command} ${args.join(' ')}`,\n        });\n        return;\n      }\n      resolve();\n    });\n  });\n}\n\nfunction run(\n  root,\n  appName,\n  version,\n  verbose,\n  originalDirectory,\n  template,\n  useYarn,\n  usePnp\n) {\n  Promise.all([\n    getInstallPackage(version, originalDirectory),\n    getTemplateInstallPackage(template, originalDirectory),\n  ]).then(([packageToInstall, templateToInstall]) => {\n    const allDependencies = ['react', 'react-dom', packageToInstall];\n\n    console.log('Installing packages. This might take a couple of minutes.');\n\n    Promise.all([\n      getPackageInfo(packageToInstall),\n      getPackageInfo(templateToInstall),\n    ])\n      .then(([packageInfo, templateInfo]) =>\n        checkIfOnline(useYarn).then(isOnline => ({\n          isOnline,\n          packageInfo,\n          templateInfo,\n        }))\n      )\n      .then(({ isOnline, packageInfo, templateInfo }) => {\n        let packageVersion = semver.coerce(packageInfo.version);\n\n        const templatesVersionMinimum = '3.3.0';\n\n        // Assume compatibility if we can't test the version.\n        if (!semver.valid(packageVersion)) {\n          packageVersion = templatesVersionMinimum;\n        }\n\n        // Only support templates when used alongside new react-scripts versions.\n        const supportsTemplates = semver.gte(\n          packageVersion,\n          templatesVersionMinimum\n        );\n        if (supportsTemplates) {\n          allDependencies.push(templateToInstall);\n        } else if (template) {\n          console.log('');\n          console.log(\n            `The ${chalk.cyan(packageInfo.name)} version you're using ${\n              packageInfo.name === 'react-scripts' ? 'is not' : 'may not be'\n            } compatible with the ${chalk.cyan('--template')} option.`\n          );\n          console.log('');\n        }\n\n        console.log(\n          `Installing ${chalk.cyan('react')}, ${chalk.cyan(\n            'react-dom'\n          )}, and ${chalk.cyan(packageInfo.name)}${\n            supportsTemplates ? ` with ${chalk.cyan(templateInfo.name)}` : ''\n          }...`\n        );\n        console.log();\n\n        return install(\n          root,\n          useYarn,\n          usePnp,\n          allDependencies,\n          verbose,\n          isOnline\n        ).then(() => ({\n          packageInfo,\n          supportsTemplates,\n          templateInfo,\n        }));\n      })\n      .then(async ({ packageInfo, supportsTemplates, templateInfo }) => {\n        const packageName = packageInfo.name;\n        const templateName = supportsTemplates ? templateInfo.name : undefined;\n        checkNodeVersion(packageName);\n        setCaretRangeForRuntimeDeps(packageName);\n\n        const pnpPath = path.resolve(process.cwd(), '.pnp.js');\n\n        const nodeArgs = fs.existsSync(pnpPath) ? ['--require', pnpPath] : [];\n\n        await executeNodeScript(\n          {\n            cwd: process.cwd(),\n            args: nodeArgs,\n          },\n          [root, appName, verbose, originalDirectory, templateName],\n          `\n        const init = require('${packageName}/scripts/init.js');\n        init.apply(null, JSON.parse(process.argv[1]));\n      `\n        );\n\n        if (version === 'react-scripts@0.9.x') {\n          console.log(\n            chalk.yellow(\n              `\\nNote: the project was bootstrapped with an old unsupported version of tools.\\n` +\n                `Please update to Node >=14 and npm >=6 to get supported tools in new projects.\\n`\n            )\n          );\n        }\n      })\n      .catch(reason => {\n        console.log();\n        console.log('Aborting installation.');\n        if (reason.command) {\n          console.log(`  ${chalk.cyan(reason.command)} has failed.`);\n        } else {\n          console.log(\n            chalk.red('Unexpected error. Please report it as a bug:')\n          );\n          console.log(reason);\n        }\n        console.log();\n\n        // On 'exit' we will delete these files from target directory.\n        const knownGeneratedFiles = ['package.json', 'node_modules'];\n        const currentFiles = fs.readdirSync(path.join(root));\n        currentFiles.forEach(file => {\n          knownGeneratedFiles.forEach(fileToMatch => {\n            // This removes all knownGeneratedFiles.\n            if (file === fileToMatch) {\n              console.log(`Deleting generated file... ${chalk.cyan(file)}`);\n              fs.removeSync(path.join(root, file));\n            }\n          });\n        });\n        const remainingFiles = fs.readdirSync(path.join(root));\n        if (!remainingFiles.length) {\n          // Delete target folder if empty\n          console.log(\n            `Deleting ${chalk.cyan(`${appName}/`)} from ${chalk.cyan(\n              path.resolve(root, '..')\n            )}`\n          );\n          process.chdir(path.resolve(root, '..'));\n          fs.removeSync(path.join(root));\n        }\n        console.log('Done.');\n        process.exit(1);\n      });\n  });\n}\n\nfunction getInstallPackage(version, originalDirectory) {\n  let packageToInstall = 'react-scripts';\n  const validSemver = semver.valid(version);\n  if (validSemver) {\n    packageToInstall += `@${validSemver}`;\n  } else if (version) {\n    if (version[0] === '@' && !version.includes('/')) {\n      packageToInstall += version;\n    } else if (version.match(/^file:/)) {\n      packageToInstall = `file:${path.resolve(\n        originalDirectory,\n        version.match(/^file:(.*)?$/)[1]\n      )}`;\n    } else {\n      // for tar.gz or alternative paths\n      packageToInstall = version;\n    }\n  }\n\n  const scriptsToWarn = [\n    {\n      name: 'react-scripts-ts',\n      message: chalk.yellow(\n        `The react-scripts-ts package is deprecated. TypeScript is now supported natively in Create React App. You can use the ${chalk.green(\n          '--template typescript'\n        )} option instead when generating your app to include TypeScript support. Would you like to continue using react-scripts-ts?`\n      ),\n    },\n  ];\n\n  for (const script of scriptsToWarn) {\n    if (packageToInstall.startsWith(script.name)) {\n      return prompts({\n        type: 'confirm',\n        name: 'useScript',\n        message: script.message,\n        initial: false,\n      }).then(answer => {\n        if (!answer.useScript) {\n          process.exit(0);\n        }\n\n        return packageToInstall;\n      });\n    }\n  }\n\n  return Promise.resolve(packageToInstall);\n}\n\nfunction getTemplateInstallPackage(template, originalDirectory) {\n  let templateToInstall = 'cra-template';\n  if (template) {\n    if (template.match(/^file:/)) {\n      templateToInstall = `file:${path.resolve(\n        originalDirectory,\n        template.match(/^file:(.*)?$/)[1]\n      )}`;\n    } else if (\n      template.includes('://') ||\n      template.match(/^.+\\.(tgz|tar\\.gz)$/)\n    ) {\n      // for tar.gz or alternative paths\n      templateToInstall = template;\n    } else {\n      // Add prefix 'cra-template-' to non-prefixed templates, leaving any\n      // @scope/ and @version intact.\n      const packageMatch = template.match(/^(@[^/]+\\/)?([^@]+)?(@.+)?$/);\n      const scope = packageMatch[1] || '';\n      const templateName = packageMatch[2] || '';\n      const version = packageMatch[3] || '';\n\n      if (\n        templateName === templateToInstall ||\n        templateName.startsWith(`${templateToInstall}-`)\n      ) {\n        // Covers:\n        // - cra-template\n        // - @SCOPE/cra-template\n        // - cra-template-NAME\n        // - @SCOPE/cra-template-NAME\n        templateToInstall = `${scope}${templateName}${version}`;\n      } else if (version && !scope && !templateName) {\n        // Covers using @SCOPE only\n        templateToInstall = `${version}/${templateToInstall}`;\n      } else {\n        // Covers templates without the `cra-template` prefix:\n        // - NAME\n        // - @SCOPE/NAME\n        templateToInstall = `${scope}${templateToInstall}-${templateName}${version}`;\n      }\n    }\n  }\n\n  return Promise.resolve(templateToInstall);\n}\n\nfunction getTemporaryDirectory() {\n  return new Promise((resolve, reject) => {\n    // Unsafe cleanup lets us recursively delete the directory if it contains\n    // contents; by default it only allows removal if it's empty\n    tmp.dir({ unsafeCleanup: true }, (err, tmpdir, callback) => {\n      if (err) {\n        reject(err);\n      } else {\n        resolve({\n          tmpdir: tmpdir,\n          cleanup: () => {\n            try {\n              callback();\n            } catch (ignored) {\n              // Callback might throw and fail, since it's a temp directory the\n              // OS will clean it up eventually...\n            }\n          },\n        });\n      }\n    });\n  });\n}\n\nfunction extractStream(stream, dest) {\n  return new Promise((resolve, reject) => {\n    stream.pipe(\n      unpack(dest, err => {\n        if (err) {\n          reject(err);\n        } else {\n          resolve(dest);\n        }\n      })\n    );\n  });\n}\n\n// Extract package name from tarball url or path.\nfunction getPackageInfo(installPackage) {\n  if (installPackage.match(/^.+\\.(tgz|tar\\.gz)$/)) {\n    return getTemporaryDirectory()\n      .then(obj => {\n        let stream;\n        if (/^http/.test(installPackage)) {\n          stream = hyperquest(installPackage);\n        } else {\n          stream = fs.createReadStream(installPackage);\n        }\n        return extractStream(stream, obj.tmpdir).then(() => obj);\n      })\n      .then(obj => {\n        const { name, version } = require(path.join(\n          obj.tmpdir,\n          'package.json'\n        ));\n        obj.cleanup();\n        return { name, version };\n      })\n      .catch(err => {\n        // The package name could be with or without semver version, e.g. react-scripts-0.2.0-alpha.1.tgz\n        // However, this function returns package name only without semver version.\n        console.log(\n          `Could not extract the package name from the archive: ${err.message}`\n        );\n        const assumedProjectName = installPackage.match(\n          /^.+\\/(.+?)(?:-\\d+.+)?\\.(tgz|tar\\.gz)$/\n        )[1];\n        console.log(\n          `Based on the filename, assuming it is \"${chalk.cyan(\n            assumedProjectName\n          )}\"`\n        );\n        return Promise.resolve({ name: assumedProjectName });\n      });\n  } else if (installPackage.startsWith('git+')) {\n    // Pull package name out of git urls e.g:\n    // git+https://github.com/mycompany/react-scripts.git\n    // git+ssh://github.com/mycompany/react-scripts.git#v1.2.3\n    return Promise.resolve({\n      name: installPackage.match(/([^/]+)\\.git(#.*)?$/)[1],\n    });\n  } else if (installPackage.match(/.+@/)) {\n    // Do not match @scope/ when stripping off @version or @tag\n    return Promise.resolve({\n      name: installPackage.charAt(0) + installPackage.substr(1).split('@')[0],\n      version: installPackage.split('@')[1],\n    });\n  } else if (installPackage.match(/^file:/)) {\n    const installPackagePath = installPackage.match(/^file:(.*)?$/)[1];\n    const { name, version } = require(path.join(\n      installPackagePath,\n      'package.json'\n    ));\n    return Promise.resolve({ name, version });\n  }\n  return Promise.resolve({ name: installPackage });\n}\n\nfunction checkNpmVersion() {\n  let hasMinNpm = false;\n  let npmVersion = null;\n  try {\n    npmVersion = execSync('npm --version').toString().trim();\n    hasMinNpm = semver.gte(npmVersion, '6.0.0');\n  } catch (err) {\n    // ignore\n  }\n  return {\n    hasMinNpm: hasMinNpm,\n    npmVersion: npmVersion,\n  };\n}\n\nfunction checkYarnVersion() {\n  const minYarnPnp = '1.12.0';\n  const maxYarnPnp = '2.0.0';\n  let hasMinYarnPnp = false;\n  let hasMaxYarnPnp = false;\n  let yarnVersion = null;\n  try {\n    yarnVersion = execSync('yarnpkg --version').toString().trim();\n    if (semver.valid(yarnVersion)) {\n      hasMinYarnPnp = semver.gte(yarnVersion, minYarnPnp);\n      hasMaxYarnPnp = semver.lt(yarnVersion, maxYarnPnp);\n    } else {\n      // Handle non-semver compliant yarn version strings, which yarn currently\n      // uses for nightly builds. The regex truncates anything after the first\n      // dash. See #5362.\n      const trimmedYarnVersionMatch = /^(.+?)[-+].+$/.exec(yarnVersion);\n      if (trimmedYarnVersionMatch) {\n        const trimmedYarnVersion = trimmedYarnVersionMatch.pop();\n        hasMinYarnPnp = semver.gte(trimmedYarnVersion, minYarnPnp);\n        hasMaxYarnPnp = semver.lt(trimmedYarnVersion, maxYarnPnp);\n      }\n    }\n  } catch (err) {\n    // ignore\n  }\n  return {\n    hasMinYarnPnp: hasMinYarnPnp,\n    hasMaxYarnPnp: hasMaxYarnPnp,\n    yarnVersion: yarnVersion,\n  };\n}\n\nfunction checkNodeVersion(packageName) {\n  const packageJsonPath = path.resolve(\n    process.cwd(),\n    'node_modules',\n    packageName,\n    'package.json'\n  );\n\n  if (!fs.existsSync(packageJsonPath)) {\n    return;\n  }\n\n  const packageJson = require(packageJsonPath);\n  if (!packageJson.engines || !packageJson.engines.node) {\n    return;\n  }\n\n  if (!semver.satisfies(process.version, packageJson.engines.node)) {\n    console.error(\n      chalk.red(\n        'You are running Node %s.\\n' +\n          'Create React App requires Node %s or higher. \\n' +\n          'Please update your version of Node.'\n      ),\n      process.version,\n      packageJson.engines.node\n    );\n    process.exit(1);\n  }\n}\n\nfunction checkAppName(appName) {\n  const validationResult = validateProjectName(appName);\n  if (!validationResult.validForNewPackages) {\n    console.error(\n      chalk.red(\n        `Cannot create a project named ${chalk.green(\n          `\"${appName}\"`\n        )} because of npm naming restrictions:\\n`\n      )\n    );\n    [\n      ...(validationResult.errors || []),\n      ...(validationResult.warnings || []),\n    ].forEach(error => {\n      console.error(chalk.red(`  * ${error}`));\n    });\n    console.error(chalk.red('\\nPlease choose a different project name.'));\n    process.exit(1);\n  }\n\n  // TODO: there should be a single place that holds the dependencies\n  const dependencies = ['react', 'react-dom', 'react-scripts'].sort();\n  if (dependencies.includes(appName)) {\n    console.error(\n      chalk.red(\n        `Cannot create a project named ${chalk.green(\n          `\"${appName}\"`\n        )} because a dependency with the same name exists.\\n` +\n          `Due to the way npm works, the following names are not allowed:\\n\\n`\n      ) +\n        chalk.cyan(dependencies.map(depName => `  ${depName}`).join('\\n')) +\n        chalk.red('\\n\\nPlease choose a different project name.')\n    );\n    process.exit(1);\n  }\n}\n\nfunction makeCaretRange(dependencies, name) {\n  const version = dependencies[name];\n\n  if (typeof version === 'undefined') {\n    console.error(chalk.red(`Missing ${name} dependency in package.json`));\n    process.exit(1);\n  }\n\n  let patchedVersion = `^${version}`;\n\n  if (!semver.validRange(patchedVersion)) {\n    console.error(\n      `Unable to patch ${name} dependency version because version ${chalk.red(\n        version\n      )} will become invalid ${chalk.red(patchedVersion)}`\n    );\n    patchedVersion = version;\n  }\n\n  dependencies[name] = patchedVersion;\n}\n\nfunction setCaretRangeForRuntimeDeps(packageName) {\n  const packagePath = path.join(process.cwd(), 'package.json');\n  const packageJson = require(packagePath);\n\n  if (typeof packageJson.dependencies === 'undefined') {\n    console.error(chalk.red('Missing dependencies in package.json'));\n    process.exit(1);\n  }\n\n  const packageVersion = packageJson.dependencies[packageName];\n  if (typeof packageVersion === 'undefined') {\n    console.error(chalk.red(`Unable to find ${packageName} in package.json`));\n    process.exit(1);\n  }\n\n  makeCaretRange(packageJson.dependencies, 'react');\n  makeCaretRange(packageJson.dependencies, 'react-dom');\n\n  fs.writeFileSync(packagePath, JSON.stringify(packageJson, null, 2) + os.EOL);\n}\n\n// If project only contains files generated by GH, it’s safe.\n// Also, if project contains remnant error logs from a previous\n// installation, lets remove them now.\n// We also special case IJ-based products .idea because it integrates with CRA:\n// https://github.com/facebook/create-react-app/pull/368#issuecomment-243446094\nfunction isSafeToCreateProjectIn(root, name) {\n  const validFiles = [\n    '.DS_Store',\n    '.git',\n    '.gitattributes',\n    '.gitignore',\n    '.gitlab-ci.yml',\n    '.hg',\n    '.hgcheck',\n    '.hgignore',\n    '.idea',\n    '.npmignore',\n    '.travis.yml',\n    'docs',\n    'LICENSE',\n    'README.md',\n    'mkdocs.yml',\n    'Thumbs.db',\n  ];\n  // These files should be allowed to remain on a failed install, but then\n  // silently removed during the next create.\n  const errorLogFilePatterns = [\n    'npm-debug.log',\n    'yarn-error.log',\n    'yarn-debug.log',\n  ];\n  const isErrorLog = file => {\n    return errorLogFilePatterns.some(pattern => file.startsWith(pattern));\n  };\n\n  const conflicts = fs\n    .readdirSync(root)\n    .filter(file => !validFiles.includes(file))\n    // IntelliJ IDEA creates module files before CRA is launched\n    .filter(file => !/\\.iml$/.test(file))\n    // Don't treat log files from previous installation as conflicts\n    .filter(file => !isErrorLog(file));\n\n  if (conflicts.length > 0) {\n    console.log(\n      `The directory ${chalk.green(name)} contains files that could conflict:`\n    );\n    console.log();\n    for (const file of conflicts) {\n      try {\n        const stats = fs.lstatSync(path.join(root, file));\n        if (stats.isDirectory()) {\n          console.log(`  ${chalk.blue(`${file}/`)}`);\n        } else {\n          console.log(`  ${file}`);\n        }\n      } catch (e) {\n        console.log(`  ${file}`);\n      }\n    }\n    console.log();\n    console.log(\n      'Either try using a new directory name, or remove the files listed above.'\n    );\n\n    return false;\n  }\n\n  // Remove any log files from a previous installation.\n  fs.readdirSync(root).forEach(file => {\n    if (isErrorLog(file)) {\n      fs.removeSync(path.join(root, file));\n    }\n  });\n  return true;\n}\n\nfunction getProxy() {\n  if (process.env.https_proxy) {\n    return process.env.https_proxy;\n  } else {\n    try {\n      // Trying to read https-proxy from .npmrc\n      let httpsProxy = execSync('npm config get https-proxy').toString().trim();\n      return httpsProxy !== 'null' ? httpsProxy : undefined;\n    } catch (e) {\n      return;\n    }\n  }\n}\n\n// See https://github.com/facebook/create-react-app/pull/3355\nfunction checkThatNpmCanReadCwd() {\n  const cwd = process.cwd();\n  let childOutput = null;\n  try {\n    // Note: intentionally using spawn over exec since\n    // the problem doesn't reproduce otherwise.\n    // `npm config list` is the only reliable way I could find\n    // to reproduce the wrong path. Just printing process.cwd()\n    // in a Node process was not enough.\n    childOutput = spawn.sync('npm', ['config', 'list']).output.join('');\n  } catch (err) {\n    // Something went wrong spawning node.\n    // Not great, but it means we can't do this check.\n    // We might fail later on, but let's continue.\n    return true;\n  }\n  if (typeof childOutput !== 'string') {\n    return true;\n  }\n  const lines = childOutput.split('\\n');\n  // `npm config list` output includes the following line:\n  // \"; cwd = C:\\path\\to\\current\\dir\" (unquoted)\n  // I couldn't find an easier way to get it.\n  const prefix = '; cwd = ';\n  const line = lines.find(line => line.startsWith(prefix));\n  if (typeof line !== 'string') {\n    // Fail gracefully. They could remove it.\n    return true;\n  }\n  const npmCWD = line.substring(prefix.length);\n  if (npmCWD === cwd) {\n    return true;\n  }\n  console.error(\n    chalk.red(\n      `Could not start an npm process in the right directory.\\n\\n` +\n        `The current directory is: ${chalk.bold(cwd)}\\n` +\n        `However, a newly started npm process runs in: ${chalk.bold(\n          npmCWD\n        )}\\n\\n` +\n        `This is probably caused by a misconfigured system terminal shell.`\n    )\n  );\n  if (process.platform === 'win32') {\n    console.error(\n      chalk.red(`On Windows, this can usually be fixed by running:\\n\\n`) +\n        `  ${chalk.cyan(\n          'reg'\n        )} delete \"HKCU\\\\Software\\\\Microsoft\\\\Command Processor\" /v AutoRun /f\\n` +\n        `  ${chalk.cyan(\n          'reg'\n        )} delete \"HKLM\\\\Software\\\\Microsoft\\\\Command Processor\" /v AutoRun /f\\n\\n` +\n        chalk.red(`Try to run the above two lines in the terminal.\\n`) +\n        chalk.red(\n          `To learn more about this problem, read: https://blogs.msdn.microsoft.com/oldnewthing/20071121-00/?p=24433/`\n        )\n    );\n  }\n  return false;\n}\n\nfunction checkIfOnline(useYarn) {\n  if (!useYarn) {\n    // Don't ping the Yarn registry.\n    // We'll just assume the best case.\n    return Promise.resolve(true);\n  }\n\n  return new Promise(resolve => {\n    dns.lookup('registry.yarnpkg.com', err => {\n      let proxy;\n      if (err != null && (proxy = getProxy())) {\n        // If a proxy is defined, we likely can't resolve external hostnames.\n        // Try to resolve the proxy name as an indication of a connection.\n        dns.lookup(url.parse(proxy).hostname, proxyErr => {\n          resolve(proxyErr == null);\n        });\n      } else {\n        resolve(err == null);\n      }\n    });\n  });\n}\n\nfunction executeNodeScript({ cwd, args }, data, source) {\n  return new Promise((resolve, reject) => {\n    const child = spawn(\n      process.execPath,\n      [...args, '-e', source, '--', JSON.stringify(data)],\n      { cwd, stdio: 'inherit' }\n    );\n\n    child.on('close', code => {\n      if (code !== 0) {\n        reject({\n          command: `node ${args.join(' ')}`,\n        });\n        return;\n      }\n      resolve();\n    });\n  });\n}\n\nfunction checkForLatestVersion() {\n  return new Promise((resolve, reject) => {\n    https\n      .get(\n        'https://registry.npmjs.org/-/package/create-react-app/dist-tags',\n        res => {\n          if (res.statusCode === 200) {\n            let body = '';\n            res.on('data', data => (body += data));\n            res.on('end', () => {\n              resolve(JSON.parse(body).latest);\n            });\n          } else {\n            reject();\n          }\n        }\n      )\n      .on('error', () => {\n        reject();\n      });\n  });\n}\n\nmodule.exports = {\n  init,\n  getTemplateInstallPackage,\n};\n"],"names":["https","require","chalk","commander","dns","envinfo","execSync","fs","hyperquest","prompts","os","path","semver","spawn","tmp","unpack","url","validateProjectName","packageJson","projectName","getInstallPackage","version","originalDirectory","packageToInstall","validSemver","valid","includes","match","resolve","scriptsToWarn","name","message","yellow","green","script","startsWith","type","initial","then","answer","useScript","process","exit","Promise","getTemplateInstallPackage","template","templateToInstall","packageMatch","scope","templateName","getPackageInfo","installPackage","reject","dir","unsafeCleanup","err","tmpdir","callback","cleanup","ignored","obj","stream","test","createReadStream","dest","pipe","extractStream","join","catch","console","log","assumedProjectName","cyan","charAt","substr","split","installPackagePath","makeCaretRange","dependencies","error","red","patchedVersion","validRange","module","exports","init","localWarningFilePath","__dirname","existsSync","hasGivenWarning","bold","underline","grey","writeFileSync","writeWarningFile","program","Command","arguments","usage","action","option","allowUnknownOption","on","parse","argv","info","run","System","Binaries","Browsers","npmPackages","npmGlobalPackages","duplicates","showNotFound","get","res","statusCode","body","data","JSON","latest","toString","trim","e","lt","useYarn","env","npm_config_user_agent","indexOf","verbose","usePnp","satisfies","coerce","root","appName","basename","validationResult","validForNewPackages","errors","warnings","forEach","sort","map","depName","checkAppName","ensureDirSync","validFiles","errorLogFilePatterns","isErrorLog","file","some","pattern","conflicts","readdirSync","filter","length","lstatSync","isDirectory","blue","removeSync","isSafeToCreateProjectIn","private","stringify","EOL","cwd","chdir","childOutput","sync","output","lines","prefix","line","find","npmCWD","substring","platform","checkThatNpmCanReadCwd","yarnInfo","minYarnPnp","maxYarnPnp","hasMinYarnPnp","hasMaxYarnPnp","yarnVersion","gte","trimmedYarnVersionMatch","exec","trimmedYarnVersion","pop","checkYarnVersion","npmInfo","hasMinNpm","npmVersion","checkNpmVersion","all","allDependencies","packageInfo","templateInfo","lookup","proxy","https_proxy","httpsProxy","undefined","getProxy","hostname","proxyErr","checkIfOnline","isOnline","packageVersion","templatesVersionMinimum","supportsTemplates","push","command","args","apply","concat","stdio","code","install","async","packageName","packageJsonPath","engines","node","checkNodeVersion","packagePath","setCaretRangeForRuntimeDeps","pnpPath","nodeArgs","source","execPath","executeNodeScript","reason","knownGeneratedFiles","fileToMatch","createApp","scriptsVersion"],"mappings":"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"}