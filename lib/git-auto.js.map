{"version":3,"file":"git-auto.js","sources":["../src/git-auto.js"],"sourcesContent":["const commander = require('commander');\nconst { exec } = require('child_process');\n\nconst inquirer = require('inquirer');\nconst chalk = require('chalk');\n\nconst path = require('path');\nconst fs = require('fs');\n\nconst cmdArr = [\n  '一键提交',\n  'init',\n  'pull',\n  'add',\n  'commit',\n  'push',\n  'q',\n  'amend',\n  '清空ignore缓存'\n];\n\nconsole.log(chalk.green('=======欢迎使用 Git 自动化工具======='));\n\n/**\n * 获取用户输入的命令。\n *\n * 该函数使用 inquirer 库提示用户选择要执行的命令，并返回所选命令。\n * 用户可以从预定义的命令数组中选择，默认选择为 'pull'。\n *\n * @async\n * @function getUserInput\n * @returns {Promise<string|undefined>} 返回用户选择的命令，如果发生错误则返回 undefined。\n * @throws {Error} 如果在提示过程中发生错误，将打印错误信息。\n */\nasync function getUserInput() {\n  try {\n    const { chooseIndex } = await inquirer.prompt([\n      {\n        type: 'list',\n        name: 'chooseIndex',\n        message: '请选择要执行的命令',\n        default: 'pull',\n        choices: cmdArr.map((item, index) => ({\n          name: item,\n          value: index + 1,\n        })),\n      },\n    ]);\n    console.log(chooseIndex);\n\n    return cmdArr[chooseIndex - 1];\n  } catch (error) {\n    console.log(error.message);\n  }\n}\n\n/**\n * 初始化函数，获取用户输入并执行相应操作。\n *\n * @async\n * @function init\n * @throws {Error} 如果获取用户输入失败，将打印错误信息。\n * @returns {void}\n */\nasync function init() {\n  try {\n    const selectCmd = await getUserInput();\n    if (selectCmd === 'q') {\n      console.log('退出 Git 自动化工具。');\n      return;\n    }\n    console.log(`您输入了${selectCmd}正在为您执行操作...`);\n    switch (selectCmd) {\n      case 'init':\n        gitInit();\n        break;\n      case 'pull':\n        gitPull();\n        break;\n      case 'add':\n        gitAdd();\n        break;\n      case 'log':\n        gitLog();\n        break;\n      case 'status':\n        gitStatus();\n        break;\n      case 'commit':\n        gitCommit();\n        break;\n      case 'push':\n        gitPush();\n        break;\n      case '一键提交':\n        await gitAdd();\n        await gitCommit();\n        gitPush();\n        break;\n      case 'amend':\n        await gitAdd();\n        await gitAmend();\n        gitPush();\n        break;\n      case '清空ignore缓存':\n        await clearGitCache();\n        break;\n      default:\n        console.log('您输入了错误的命令');\n        break;\n    }\n  } catch (error) {\n    console.log(error.message);\n  }\n}\n/**\n * 移除 Git 索引锁文件。\n *\n * 此函数检查项目目录下的 .git/index.lock 文件是否存在，\n * 如果存在，则删除该文件，并在控制台输出相应的提示信息。\n *\n * @function removeIndexLock\n * @returns {void}\n */\nasync function removeIndexLock() {\n  const lockFilePath = path.join(__dirname, '..', '.git', 'index.lock');\n  if(fs.existsSync(lockFilePath)) {\n    await fs.unlinkSync(lockFilePath);\n    await fs.accessSync(lockFilePath);\n  }\n  console.log('Removed existing index.lock file.');\n}\n\nfunction gitInit(params) {\n  // 初始化仓库\n  cmdExec('init');\n}\n\nfunction gitPull(params) {\n  console.log('现在为您拉取最新代码...');\n  // 初始化仓库\n  cmdExec('pull');\n}\n\nfunction gitStatus(params) {\n  // 初始化仓库\n  cmdExec('status');\n}\nfunction gitLog(params) {\n  // 初始化仓库\n  cmdExec('log');\n}\n\nasync function gitAmend(params) {\n  // 初始化仓库\n  await removeIndexLock();\n  await cmdExec('commit --amend');\n}\n\nfunction cmdExec(cmdText) {\n  return new Promise((resolve, reject) => {\n    exec(`git ${cmdText}`, (error, stdout, stderr) => {\n      if (error) {\n        console.error(`执行命令 \"${cmdText}\" 时出错: ${error.message}`);\n        if (stderr) {\n          console.error(`stderr: ${stderr}`);\n        }\n        reject(error);\n        return;\n      }\n      if (stderr) {\n        console.error(`stderr: ${stderr}`);\n      }\n      console.log(`stdout: ${stdout}`);\n      resolve();\n    });\n  });\n}\n\nasync function gitAdd(params) {\n  removeIndexLock();\n  // 添加文件到暂存区\n  const inputText = await inquirer.prompt([\n    {\n      type: 'input',\n      name: 'text',\n      message: '请输入要添加的文件名或路径',\n    },\n  ]);\n  console.log('正在执行添加操作', inputText.text);\n  try {\n    const command = inputText.text ? `git add ${inputText.text}` : 'git add .';\n    exec(command, (error, stdout, stderr) => {\n      if (error) {\n        console.error(`添加文件时出错: ${error.message}`);\n        return;\n      }\n      if (stderr) {\n        console.error(`stderr: ${stderr}`);\n        return;\n      }\n      console.log(`已经添加到暂存区: ${stdout}`);\n    });\n  } catch (error) {\n    console.log(error.message);\n  }\n}\n\nasync function gitCommit(params) {\n  // 提交更改\n  const inputText = await inquirer.prompt([\n    {\n      type: 'input',\n      name: 'text',\n      message: '请输入提交信息',\n      default: '修改',\n    },\n  ]);\n  console.log('正在执行添加操作', inputText.text);\n  exec(`git commit -m \"${inputText.text}\"`, (error, stdout, stderr) => {\n    if (error) {\n      console.error(`提交更改时出错: ${error.message}`);\n      return;\n    }\n    if (stderr) {\n      console.error(`stderr: ${stderr}`);\n      return;\n    }\n    console.log(`stdout: ${stdout}`);\n  });\n}\n\nfunction gitPush(params) {\n  // 推送到远程仓库\n  cmdExec('push');\n}\n\nasync function clearGitCache() {\n  console.log(chalk.yellow('正在清空 Git 缓存...'));\n  try {\n    // 删除 .gitignore 缓存\n    await cmdExec('rm -rf .git/index');\n    // 重新添加所有文件\n    await cmdExec('git add .');\n    console.log(chalk.green('Git 缓存已清空并重新添加所有文件'));\n  } catch (error) {\n    console.error(chalk.red(`清空缓存失败：${error.message}`));\n  }\n}\n\ninit();\n\n// 解析命令行参数\ncommander.parse(process.argv);\n"],"names":["commander","require","exec","inquirer","chalk","path","fs","cmdArr","async","removeIndexLock","lockFilePath","join","__dirname","existsSync","unlinkSync","accessSync","console","log","cmdExec","cmdText","Promise","resolve","reject","error","stdout","stderr","message","gitAdd","params","inputText","prompt","type","name","text","command","gitCommit","default","gitPush","green","selectCmd","chooseIndex","choices","map","item","index","value","getUserInput","gitAmend","yellow","red","clearGitCache","init","parse","process","argv"],"mappings":"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"}