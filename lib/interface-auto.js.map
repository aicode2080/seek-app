{"version":3,"file":"interface-auto.js","sources":["../src/interface-auto.js"],"sourcesContent":["const chalk = require('chalk');\nconst fs = require('fs');\nconst generate = require('json-schema-to-typescript');\n// const schema1 = require('../schema.json'); // 引入你的 schema 文件\n\nconst path = require('path');\n// console.log(schema1);\n\nconst currentDir = process.cwd();\nconst schema = require(path.join(currentDir, 'schema.json')); // 引入你的 schema 文件\nconsole.log(generate);\nasync function generateTypes() {\n  try {\n    const typeName = 'PageProps'; // 你想要生成的 TypeScript 接口名称\n    const tsType = await generate.compile(schema, typeName); // 生成 TypeScript 类型定义\n    fs.writeFileSync('interface.ts', tsType); // 将类型定义写入文件\n    console.log(\n      chalk.green(\n        '=========Typescript interface generated successfully========='\n      )\n    );\n  } catch (error) {\n    console.error(\n      chalk.yellow('请检查项目根目录是否有schma.json文件或文件格式是否正确'),\n      error\n    );\n  }\n}\n\ngenerateTypes(); // 调用函数生成类型定义\n"],"names":["chalk","require","fs","generate","path","currentDir","process","cwd","schema","join","console","log","async","typeName","tsType","compile","writeFileSync","green","error","yellow","generateTypes"],"mappings":";aAAA,MAAMA,EAAQC,QAAQ,SAChBC,EAAKD,QAAQ,MACbE,EAAWF,QAAQ,6BAGnBG,EAAOH,QAAQ,QAGfI,EAAaC,QAAQC,MACrBC,EAASP,QAAQG,EAAKK,KAAKJ,EAAY,gBAC7CK,QAAQC,IAAIR,GACZS,iBACE,IACE,MAAMC,EAAW,YACXC,QAAeX,EAASY,QAAQP,EAAQK,GAC9CX,EAAGc,cAAc,eAAgBF,GACjCJ,QAAQC,IACNX,EAAMiB,MACJ,iEAGL,CAAC,MAAOC,GACPR,QAAQQ,MACNlB,EAAMmB,OAAO,oCACbD,EAEJ,CACF,CAEAE"}