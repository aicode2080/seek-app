#!/usr/bin/env node
"use strict";const o=require("commander"),e=require("../package.json"),n=require("chalk"),{exec:s,spawn:l}=require("child_process"),r=require("path");console.log(n.green("******欢迎使用seek-app脚手架******")),o.version(`seek-app当前版本号：${n.green(e.version)}`,"-v, --version","显示当前版本号"),o.command("update").alias("u").description("更新到最新版本").action((async()=>{console.log(n.yellow(`当前版本：${e.version}`)),console.log(n.blue("正在更新 seek-app 到最新版本...")),s("npm view seek-app version",((o,l,r)=>{if(o)return void console.error(n.red(`获取最新版本号失败：${o.message}`));const c=l.trim();c!==e.version?s("npm i seek-app@latest -g",(async(o,e,s)=>{o?console.error(n.red(`更新失败：${o.message}`)):console.log(n.green(`更新成功！新版本号：${c}`))})):console.log(n.yellow("当前已是最新版本！"))}))})),o.command("debug").alias("d").description("调试模式").action((async o=>{console.log(n.blue("===== 调试信息 =====")),console.log(n.yellow("版本信息：")),console.log(`当前版本：${e.version}`),console.log(n.yellow("\n环境信息：")),console.log(`Node.js 版本：${process.version}`),console.log(`操作系统：${process.platform}`),console.log(`系统架构：${process.arch}`),console.log(n.yellow("\n依赖信息：")),Object.entries(e.dependencies).forEach((([o,e])=>{console.log(`${o}: ${e}`)})),s("npm root -g",((o,e,s)=>{o||(console.log(n.yellow("\n全局安装路径：")),console.log(e.trim()))})),console.log(n.blue("\n===== 调试信息结束 ====="))})),o.command("close-debug").alias("c").description("关闭调试模式").action((async()=>{console.log(n.blue("===== 关闭调试模式 =====")),process.env.NODE_ENV="production",console.log(n.yellow("已关闭调试模式")),console.log(n.yellow("当前环境：")+n.green(process.env.NODE_ENV)),console.log(n.yellow("\n调试状态：")+n.red("已关闭")),console.log(n.blue("\n===== 调试模式已关闭 ====="))})),o.command("git").alias("g").description("git操作").action((async o=>{console.log(n.green("******执行git自动化命令******"));const e=r.join(__dirname,"git-auto.js"),s=l("node",[e],{stdio:"inherit",shell:!0});s.on("error",(o=>{console.error(n.red(`执行失败：${o.message}`))})),s.on("close",(o=>{0!==o&&console.error(n.red(`命令执行失败，退出码：${o}`)),console.log(n.yellow("\n执行结束"))}))})),o.command("async").alias("s").description("自动化生成ts命令").action((async o=>{console.log(n.green("******执行typscript自动化命令******"));const e=r.join(__dirname,"interface-auto.js"),s=l("node",[e],{stdio:"inherit",shell:!0});s.on("error",(o=>{console.error(n.red(`执行失败：${o.message}`))})),s.on("close",(o=>{0!==o&&console.error(n.red(`命令执行失败，退出码：${o}`)),console.log(n.yellow("\n执行结束"))}))})),o.command("create").alias("n").description("创建项目模版").action((async o=>{console.log(n.green("******创建react公司项目模版******"))})),o.parse(process.argv);
//# sourceMappingURL=seek-app.js.map
