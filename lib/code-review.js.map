{"version":3,"file":"code-review.js","sources":["../src/code-review.js"],"sourcesContent":["const fs = require('fs-extra');\nconst path = require('path');\nconst chalk = require('chalk');\nconst axios = require('axios');\n\nclass CodeReviewer {\n  constructor(options = {}) {\n    this.options = {\n      models: [\n        {\n          name: 'bigscience/bloom-560m',\n          apiKey: process.env.HUGGING_FACE_API_KEY,\n          endpoint: 'https://api-inference.huggingface.co/models',\n          type: 'huggingface'\n        },\n        {\n          name: 'qwen-7b-chat',\n          apiKey: process.env.DASHSCOPE_API_KEY,\n          endpoint: 'https://dashscope.aliyuncs.com/api/v1/services/aigc/text-generation/generation',\n          type: 'dashscope'\n        },\n        {\n          name: 'gpt-3.5-turbo',\n          apiKey: process.env.OPENAI_API_KEY,\n          endpoint: 'https://api.openai.com/v1/chat/completions',\n          type: 'openai'\n        }\n      ].filter(model => model.apiKey), // 只保留有 API Key 的模型\n      temperature: 0.7,\n      maxTokens: 2000,\n      ...options\n    };\n  }\n\n  async reviewFile(filePath, model) {\n    try {\n      const content = fs.readFileSync(filePath, 'utf8');\n      const relativePath = path.relative(process.cwd(), filePath);\n      \n      const prompt = `请对以下代码进行审核，重点关注：\n1. 代码质量和可读性\n2. 潜在的性能问题\n3. 安全隐患\n4. 最佳实践\n5. 可能的改进建议\n\n文件路径：${relativePath}\n代码内容：\n\\`\\`\\`\n${content}\n\\`\\`\\`\n\n请用中文回复，并按照以下格式输出：\n# 代码审核报告\n\n## 文件信息\n- 文件路径：${relativePath}\n- 审核时间：${new Date().toLocaleString()}\n- 使用模型：${model.name}\n\n## 审核结果\n[在这里详细说明审核结果]\n\n## 改进建议\n[在这里列出具体的改进建议]\n\n## 总结\n[在这里总结主要发现和建议]`;\n\n      let response;\n      switch (model.type) {\n        case 'huggingface':\n          response = await axios.post(\n            `${model.endpoint}/${model.name}`,\n            {\n              inputs: prompt,\n              parameters: {\n                max_length: this.options.maxTokens,\n                temperature: this.options.temperature,\n                return_full_text: false\n              }\n            },\n            {\n              headers: {\n                'Authorization': `Bearer ${model.apiKey}`,\n                'Content-Type': 'application/json'\n              }\n            }\n          );\n          return response.data[0].generated_text;\n        \n        case 'dashscope':\n          response = await axios.post(\n            model.endpoint,\n            {\n              model: model.name,\n              input: {\n                messages: [{ role: 'user', content: prompt }]\n              },\n              parameters: {\n                temperature: this.options.temperature,\n                max_tokens: this.options.maxTokens\n              }\n            },\n            {\n              headers: {\n                'Authorization': `Bearer ${model.apiKey}`,\n                'Content-Type': 'application/json'\n              }\n            }\n          );\n          return response.data.output.text;\n        \n        case 'openai':\n          response = await axios.post(\n            model.endpoint,\n            {\n              model: model.name,\n              messages: [{ role: 'user', content: prompt }],\n              temperature: this.options.temperature,\n              max_tokens: this.options.maxTokens\n            },\n            {\n              headers: {\n                'Authorization': `Bearer ${model.apiKey}`,\n                'Content-Type': 'application/json'\n              }\n            }\n          );\n          return response.data.choices[0].message.content;\n        \n        default:\n          throw new Error(`不支持的模型类型：${model.type}`);\n      }\n    } catch (error) {\n      console.error(chalk.red(`使用模型 ${model.name} 审核文件 ${filePath} 时出错：${error.message}`));\n      return null;\n    }\n  }\n\n  async reviewDirectory(dirPath) {\n    const files = [];\n    const results = {};\n\n    // 获取所有需要审核的文件\n    const getAllFiles = (dir) => {\n      const items = fs.readdirSync(dir);\n      items.forEach(item => {\n        const fullPath = path.join(dir, item);\n        const stat = fs.statSync(fullPath);\n        if (stat.isDirectory()) {\n          getAllFiles(fullPath);\n        } else if (this.shouldReviewFile(item)) {\n          files.push(fullPath);\n        }\n      });\n    };\n\n    getAllFiles(dirPath);\n\n    // 为每个模型创建结果数组\n    this.options.models.forEach(model => {\n      results[model.name] = [];\n    });\n\n    // 审核每个文件\n    for (const file of files) {\n      console.log(chalk.blue(`正在审核文件：${file}`));\n      \n      // 使用所有可用模型审核文件\n      for (const model of this.options.models) {\n        console.log(chalk.blue(`使用模型 ${model.name} 进行审核...`));\n        const result = await this.reviewFile(file, model);\n        if (result) {\n          results[model.name].push(result);\n        }\n      }\n    }\n\n    return results;\n  }\n\n  shouldReviewFile(filename) {\n    const extensions = ['.js', '.jsx', '.ts', '.tsx', '.vue', '.py', '.java', '.cpp', '.c', '.cs'];\n    return extensions.some(ext => filename.endsWith(ext));\n  }\n\n  generateHtmlReport(results) {\n    const html = `\n<!DOCTYPE html>\n<html lang=\"zh-CN\">\n<head>\n    <meta charset=\"UTF-8\">\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n    <title>多模型代码审核对比报告</title>\n    <style>\n        body {\n            font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, 'Helvetica Neue', Arial, sans-serif;\n            line-height: 1.6;\n            color: #333;\n            max-width: 1200px;\n            margin: 0 auto;\n            padding: 20px;\n        }\n        h1 {\n            color: #2c3e50;\n            border-bottom: 2px solid #eee;\n            padding-bottom: 10px;\n        }\n        h2 {\n            color: #34495e;\n            margin-top: 30px;\n        }\n        .model-section {\n            margin-bottom: 40px;\n            padding: 20px;\n            border: 1px solid #eee;\n            border-radius: 8px;\n        }\n        .model-header {\n            background-color: #f8f9fa;\n            padding: 10px;\n            border-radius: 5px;\n            margin-bottom: 20px;\n        }\n        pre {\n            background-color: #f8f9fa;\n            padding: 15px;\n            border-radius: 5px;\n            overflow-x: auto;\n        }\n        code {\n            font-family: 'Courier New', Courier, monospace;\n            background-color: #f8f9fa;\n            padding: 2px 5px;\n            border-radius: 3px;\n        }\n        .file-info {\n            background-color: #f8f9fa;\n            padding: 10px;\n            border-radius: 5px;\n            margin: 10px 0;\n        }\n        .timestamp {\n            color: #666;\n            font-size: 0.9em;\n        }\n        .model-comparison {\n            margin-top: 40px;\n            padding: 20px;\n            background-color: #f8f9fa;\n            border-radius: 8px;\n        }\n        .model-comparison h2 {\n            color: #2c3e50;\n            margin-bottom: 20px;\n        }\n        .comparison-table {\n            width: 100%;\n            border-collapse: collapse;\n            margin-top: 20px;\n        }\n        .comparison-table th,\n        .comparison-table td {\n            padding: 10px;\n            border: 1px solid #ddd;\n            text-align: left;\n        }\n        .comparison-table th {\n            background-color: #f1f1f1;\n        }\n    </style>\n</head>\n<body>\n    <h1>多模型代码审核对比报告</h1>\n    <div class=\"timestamp\">生成时间：${new Date().toLocaleString()}</div>\n    \n    ${Object.entries(results).map(([modelName, modelResults]) => `\n        <div class=\"model-section\">\n            <div class=\"model-header\">\n                <h2>模型：${modelName}</h2>\n            </div>\n            ${modelResults.map(result => `\n                <div class=\"review-result\">\n                    ${result}\n                </div>\n            `).join('<hr>')}\n        </div>\n    `).join('')}\n\n    <div class=\"model-comparison\">\n        <h2>模型对比分析</h2>\n        <table class=\"comparison-table\">\n            <thead>\n                <tr>\n                    <th>模型名称</th>\n                    <th>审核文件数</th>\n                    <th>平均响应时间</th>\n                    <th>特点分析</th>\n                </tr>\n            </thead>\n            <tbody>\n                ${Object.entries(results).map(([modelName, modelResults]) => `\n                    <tr>\n                        <td>${modelName}</td>\n                        <td>${modelResults.length}</td>\n                        <td>${(modelResults.reduce((acc, curr) => acc + curr.responseTime, 0) / modelResults.length).toFixed(2)}ms</td>\n                        <td>${this.getModelAnalysis(modelName, modelResults)}</td>\n                    </tr>\n                `).join('')}\n            </tbody>\n        </table>\n    </div>\n</body>\n</html>`;\n\n    const reportPath = path.join(process.cwd(), 'code-review-comparison.html');\n    fs.writeFileSync(reportPath, html);\n    return reportPath;\n  }\n\n  getModelAnalysis(modelName, results) {\n    // 这里可以根据实际结果分析每个模型的特点\n    const analysis = {\n      'bigscience/bloom-560m': '开源模型，响应较快，适合基础代码审查',\n      'qwen-7b-chat': '中文理解能力强，适合中文项目代码审查',\n      'gpt-3.5-turbo': '通用性强，代码审查质量较高'\n    };\n    return analysis[modelName] || '暂无分析';\n  }\n}\n\nmodule.exports = CodeReviewer; "],"names":["fs","require","path","chalk","axios","module","exports","constructor","options","this","models","name","apiKey","process","env","HUGGING_FACE_API_KEY","endpoint","type","DASHSCOPE_API_KEY","OPENAI_API_KEY","filter","model","temperature","maxTokens","reviewFile","filePath","content","readFileSync","relativePath","relative","cwd","prompt","Date","toLocaleString","response","post","inputs","parameters","max_length","return_full_text","headers","Authorization","data","generated_text","input","messages","role","max_tokens","output","text","choices","message","Error","error","console","red","reviewDirectory","dirPath","files","results","getAllFiles","dir","readdirSync","forEach","item","fullPath","join","statSync","isDirectory","shouldReviewFile","push","file","log","blue","result","filename","some","ext","endsWith","generateHtmlReport","html","Object","entries","map","modelName","modelResults","length","reduce","acc","curr","responseTime","toFixed","getModelAnalysis","reportPath","writeFileSync"],"mappings":"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"}